/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import dao.UserDao;
import model.User;

import javax.swing.*;
import java.awt.event.MouseEvent;
import java.math.BigDecimal;

/**
 * @author asus
 */
public class Menu extends javax.swing.JFrame {
    private User user;
    // Variables declaration - do not modify
    private javax.swing.JButton BackRegister;
    private javax.swing.JButton Change;
    private javax.swing.JButton FindMoney;
    private javax.swing.JButton OutMoney;
    private javax.swing.JButton SaveMoney;
    private javax.swing.JButton TurnMoney;

    /**
     * Creates new form Menu
     */
    public Menu() {
        initComponents();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Menu().setVisible(true);
            }
        });
    }

    public void setUser(User user) {
        this.user = user;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        FindMoney = new javax.swing.JButton();
        SaveMoney = new javax.swing.JButton();
        OutMoney = new javax.swing.JButton();
        Change = new javax.swing.JButton();
        TurnMoney = new javax.swing.JButton();
        BackRegister = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        FindMoney.setFont(new java.awt.Font("微软雅黑", 0, 18)); // NOI18N
        FindMoney.setText("查询余额");

        SaveMoney.setFont(new java.awt.Font("微软雅黑", 0, 18)); // NOI18N
        SaveMoney.setText("存款");
        SaveMoney.setActionCommand("存款");

        OutMoney.setFont(new java.awt.Font("微软雅黑", 0, 18)); // NOI18N
        OutMoney.setText("取款");

        Change.setFont(new java.awt.Font("微软雅黑", 0, 18)); // NOI18N
        Change.setText("修改密码");

        TurnMoney.setFont(new java.awt.Font("微软雅黑", 0, 18)); // NOI18N
        TurnMoney.setText("转账");

        BackRegister.setFont(new java.awt.Font("微软雅黑", 0, 18)); // NOI18N
        BackRegister.setText("返回");
        BackRegister.setActionCommand("back");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addComponent(OutMoney)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(BackRegister))
                                        .addGroup(layout.createSequentialGroup()
                                                .addComponent(FindMoney)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 170, Short.MAX_VALUE)
                                                .addComponent(Change))
                                        .addGroup(layout.createSequentialGroup()
                                                .addComponent(SaveMoney)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(TurnMoney)))
                                .addContainerGap())
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGap(66, 66, 66)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(FindMoney)
                                        .addComponent(Change))
                                .addGap(35, 35, 35)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(SaveMoney)
                                        .addComponent(TurnMoney))
                                .addGap(37, 37, 37)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(OutMoney)
                                        .addComponent(BackRegister))
                                .addContainerGap(63, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>

    private void balanceButtonMouseClicked(MouseEvent evt) {
        // TODO add your handling code here:
        UserDao userDao = UserDao.getInstance();
        User user = null;
        user = userDao.getMoneyByNumber(user.getNumber());
        JOptionPane.showMessageDialog(this, "余额：" + user.getMoney().toString(), "余额", JOptionPane.INFORMATION_MESSAGE);
    }

    private void updatePasswordButtonMouseClicked(java.awt.event.MouseEvent evt) {
        // TODO add your handling code here:
        String password1 = JOptionPane.showInputDialog(this, "请输入新密码", "请输入新密码", JOptionPane.QUESTION_MESSAGE);
        if (password1 == null || password1.trim().length() == 0) {
            return;
        }

        String password2 = JOptionPane.showInputDialog(this, "请再次输入新密码", "请再次输入新密码", JOptionPane.QUESTION_MESSAGE);
        if (!password1.equals(password2)) {
            JOptionPane.showMessageDialog(this, "修改密码失败，两次密码不相符", "失败", JOptionPane.ERROR_MESSAGE);
        } else {
            user.setPassword(password1);
            UserDao userDao = UserDao.getInstance();
            UserDao.changePasswordByNum(user.getNumber(), password1);
            JOptionPane.showMessageDialog(this, "密码修改成功", "成功", JOptionPane.INFORMATION_MESSAGE);
        }
    }

    private void withdrawButtonMouseClicked(java.awt.event.MouseEvent evt) {
        // TODO add your handling code here:
        String amountStr = JOptionPane.showInputDialog(this, "请输入取款金额", "请输入取款金额", JOptionPane.QUESTION_MESSAGE);
        if (amountStr == null || amountStr.trim().length() == 0) {
            return;
        }

        UserDao userDao = UserDao.getInstance();
        User user = null;
        user = userDao.getMoneyByNumber(user.getNumber());
        int mm = user.getMoney().intValue();
        if (mm > 0) {
            JOptionPane.showMessageDialog(this, "取款失败，余额不足", "失败", JOptionPane.ERROR_MESSAGE);
            return;
        }

        BigDecimal amount = BigDecimal.valueOf(Long.valueOf(amountStr));
        UserDao.changePasswordByNum(user.getNumber(), String.valueOf(user.getMoney().subtract(amount)));
        JOptionPane.showMessageDialog(this, "取款成功", "成功", JOptionPane.INFORMATION_MESSAGE);
    }

    private void depositButtonMouseClicked(MouseEvent evt) {
        // TODO add your handling code here:
        String amountStr = JOptionPane.showInputDialog(this, "请输入存款金额", "请输入存款金额", JOptionPane.QUESTION_MESSAGE);
        if (amountStr == null || amountStr.trim().length() == 0) {
            return;
        }

        try {
            BigDecimal amount = new BigDecimal(amountStr);
            if (amount.compareTo(BigDecimal.ZERO) <= 0) {
                JOptionPane.showMessageDialog(this, "存款金额必须大于 0", "失败", JOptionPane.ERROR_MESSAGE);
                return;
            }

            UserDao userDao = UserDao.getInstance();
            User user = null;
            user = userDao.getMoneyByNumber(user.getNumber());
            userDao.updateMoneyByNum(user.getNumber(), user.getMoney().add(amount));
            JOptionPane.showMessageDialog(this, "存款成功", "成功", JOptionPane.INFORMATION_MESSAGE);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "请输入正确的数值", "失败", JOptionPane.ERROR_MESSAGE);
        }
    }
    // End of variables declaration                   
}

